<?php

/**
 * This is the model base class for the table "agent_referral_rate".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AgentReferralRate".
 *
 * Columns in table "agent_referral_rate" available as properties of the model,
 * followed by relations of table "agent_referral_rate" available as properties of the model.
 *
 * @property integer $id
 * @property integer $parent_agent_id
 * @property integer $agent_id
 * @property integer $operator_id
 * @property double $rate
 *
 * @property Agent $agent
 * @property Operator $operator
 */
abstract class BaseAgentReferralRate extends BaseGxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'agent_referral_rate';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AgentReferralRate|AgentReferralRates', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('agent_id, operator_id, rate', 'required'),
			array('parent_agent_id, agent_id, operator_id', 'numerical', 'integerOnly'=>true),
			array('rate', 'numerical'),
			array('parent_agent_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, parent_agent_id, agent_id, operator_id, rate', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'agent' => array(self::BELONGS_TO, 'Agent', 'agent_id'),
			'operator' => array(self::BELONGS_TO, 'Operator', 'operator_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'parent_agent_id' => Yii::t('app', 'Parent Agent'),
			'agent_id' => null,
			'operator_id' => null,
			'rate' => Yii::t('app', 'Rate'),
			'agent' => null,
			'operator' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('parent_agent_id', $this->parent_agent_id);
		$criteria->compare('agent_id', $this->agent_id);
		$criteria->compare('operator_id', $this->operator_id);
		$criteria->compare('rate', $this->rate);

		$dataProvider=new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));

        $dataProvider->pagination->pageSize=self::ITEMS_PER_PAGE;
        return $dataProvider;
	}

}