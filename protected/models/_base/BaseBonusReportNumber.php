<?php

/**
 * This is the model base class for the table "bonus_report_number".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BonusReportNumber".
 *
 * Columns in table "bonus_report_number" available as properties of the model,
 * followed by relations of table "bonus_report_number" available as properties of the model.
 *
 * @property string $id
 * @property integer $bonus_report_id
 * @property string $number_id
 * @property integer $agent_id
 * @property string $turnover
 * @property string $rate
 * @property string $sum
 * @property string $status
 *
 * @property BonusReport $bonusReport
 * @property Number $number
 * @property Agent $agent
 */
abstract class BaseBonusReportNumber extends BaseGxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'bonus_report_number';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'BonusReportNumber|BonusReportNumbers', $n);
	}

	public static function representingColumn() {
		return 'rate';
	}

	public function rules() {
		return array(
			array('bonus_report_id, number_id, agent_id, rate, status', 'required'),
			array('bonus_report_id, agent_id', 'numerical', 'integerOnly'=>true),
			array('number_id', 'length', 'max'=>20),
			array('turnover, sum, status', 'length', 'max'=>14),
			array('rate', 'length', 'max'=>5),
			array('turnover, sum', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, bonus_report_id, number_id, agent_id, turnover, rate, sum, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bonusReport' => array(self::BELONGS_TO, 'BonusReport', 'bonus_report_id'),
			'number' => array(self::BELONGS_TO, 'Number', 'number_id'),
			'agent' => array(self::BELONGS_TO, 'Agent', 'agent_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bonus_report_id' => null,
			'number_id' => null,
			'agent_id' => null,
			'turnover' => Yii::t('app', 'Turnover'),
			'rate' => Yii::t('app', 'Rate'),
			'sum' => Yii::t('app', 'Sum'),
			'status' => Yii::t('app', 'Status'),
			'bonusReport' => null,
			'number' => null,
			'agent' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('bonus_report_id', $this->bonus_report_id);
		$criteria->compare('number_id', $this->number_id);
		$criteria->compare('agent_id', $this->agent_id);
		$criteria->compare('turnover', $this->turnover, true);
		$criteria->compare('rate', $this->rate, true);
		$criteria->compare('sum', $this->sum, true);
		$criteria->compare('status', $this->status, true);

		$dataProvider=new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));

        $dataProvider->pagination->pageSize=self::ITEMS_PER_PAGE;
        return $dataProvider;
	}

}