<?php

/**
 * This is the model base class for the table "icc_prefix_region".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "IccPrefixRegion".
 *
 * Columns in table "icc_prefix_region" available as properties of the model,
 * followed by relations of table "icc_prefix_region" available as properties of the model.
 *
 * @property integer $id
 * @property string $icc_prefix
 * @property integer $operator_id
 * @property integer $operator_region_id
 *
 * @property Operator $operator
 * @property OperatorRegion $operatorRegion
 */
abstract class BaseIccPrefixRegion extends BaseGxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'icc_prefix_region';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'IccPrefixRegion|IccPrefixRegions', $n);
	}

	public static function representingColumn() {
		return 'icc_prefix';
	}

	public function rules() {
		return array(
			array('icc_prefix, operator_id, operator_region_id', 'required'),
			array('operator_id, operator_region_id', 'numerical', 'integerOnly'=>true),
			array('icc_prefix', 'length', 'max'=>200),
			array('id, icc_prefix, operator_id, operator_region_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'operator' => array(self::BELONGS_TO, 'Operator', 'operator_id'),
			'operatorRegion' => array(self::BELONGS_TO, 'OperatorRegion', 'operator_region_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'icc_prefix' => Yii::t('app', 'Icc Prefix'),
			'operator_id' => null,
			'operator_region_id' => null,
			'operator' => null,
			'operatorRegion' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('icc_prefix', $this->icc_prefix, true);
		$criteria->compare('operator_id', $this->operator_id);
		$criteria->compare('operator_region_id', $this->operator_region_id);

		$dataProvider=new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));

        $dataProvider->pagination->pageSize=self::ITEMS_PER_PAGE;
        return $dataProvider;
	}

}